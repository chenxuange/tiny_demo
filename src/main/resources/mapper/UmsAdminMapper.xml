<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tiny_demo.modules.ums.mapper.UmsAdminMapper">
    <resultMap id="UmsAdminMap" type="com.example.tiny_demo.modules.ums.model.UmsAdminDO">

        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="icon" property="icon"/>
        <result column="email" property="icon"/>
        <result column="nick_name" property="nickName"/>
        <result column="note" property="note"/>
        <result column="create_time" property="createTime"/>
        <result column="login_time" property="loginTime"/>
        <result column="status" property="status"/>
    </resultMap>

    <insert id="insert">
        INSERT INTO ums_admin
            (username, password, icon, email, nick_name, note, create_time, status)
        VALUES (#{username}, #{password}, #{icon}, #{email}, #{nickName}, #{note}, #{createTime}, #{status})
    </insert>
    <update id="updateById">
        update ums_admin
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="note != null">
                note = #{note},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteByIdBatch" parameterType="list">
        DELETE FROM ums_admin
        WHERE id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="selectList" resultMap="UmsAdminMap">
        select id, username, password, icon, email, nick_name, note, create_time, login_time, status
        from ums_admin
        where 1= 1
        <if test="umsAdmin.id != null">
            and id = #{umsAdmin.id}
        </if>
        <if test="umsAdmin.username != null">
            and username = #{umsAdmin.username}
        </if>
        <if test="umsAdmin.password != null">
            and password = #{umsAdmin.password}
        </if>
        <if test="umsAdmin.icon != null">
            and icon = #{umsAdmin.icon}
        </if>
        <if test="umsAdmin.email != null">
            and email = #{umsAdmin.email}
        </if>
        <if test="umsAdmin.nickName != null">
            and nick_name = #{umsAdmin.nickName}
        </if>
        <if test="umsAdmin.note != null">
            and note = #{umsAdmin.note}
        </if>
        <if test="umsAdmin.createTime != null">
            and create_time = #{umsAdmin.createTime}
        </if>
        <if test="umsAdmin.loginTime != null">
            and login_time = #{umsAdmin.loginTime}
        </if>
        <if test="umsAdmin.status != null">
            and status = #{umsAdmin.status}
        </if>
    </select>
    <select id="selectByIdBatch" resultMap="UmsAdminMap">
        select id, username, password, icon, email, nick_name, note, create_time, login_time, status
        from ums_admin
        where id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="selectByKeyword" resultMap="UmsAdminMap">
        select id, username, password, icon, email, nick_name, note, create_time, login_time, status
        from ums_admin
        <if test="keyword != null">
            where username like #{keyword} or nick_name like #{keyword}
        </if>
    </select>
</mapper>